enum AssigneeType {
  internalUser
  client
  company
}

model Task {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  label           String
  workspaceId     String        @db.VarChar(32)
  assigneeId      String?       @db.Uuid
  assigneeType    AssigneeType?
  title           String        @db.VarChar(255)
  body            String?
  createdById     String        @db.Uuid
  workflowState   WorkflowState @relation(fields: [workflowStateId], references: [id], onDelete: Cascade)
  workflowStateId String        @db.Uuid
  attachments     Attachment[]
  activityLog     ActivityLog[]
  comments        Comment[]
  scrapMedias     ScrapMedia[]

  assignedAt               DateTime?
  completedAt              DateTime?
  dueDate                  String?                    @db.VarChar(10)
  lastActivityLogUpdated   DateTime?
  createdAt                DateTime                   @default(now())
  deletedAt                DateTime?
  ClientNotification       ClientNotification[]
  InternalUserNotification InternalUserNotification[]

  parentId String? @db.Uuid
  parent   Task?   @relation("TaskToSubtasks", fields: [parentId], references: [id], onDelete: Cascade)
  subtasks Task[]  @relation("TaskToSubtasks")

  path Unsupported("ltree")? // Prisma does not have native support for ltrees yet

  isArchived       Boolean   @default(false)
  lastArchivedDate DateTime?

  @@index([path], type: Gist)
  @@map("Tasks")
}
